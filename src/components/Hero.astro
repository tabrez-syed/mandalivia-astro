---
interface Props {
    title: string;
    subtitle?: string;
    image?: string;
}

const { title, subtitle, image } = Astro.props;
---

<section class="relative min-h-[60vh] flex items-center">
    {
        image && (
            <div class="absolute inset-0 z-0">
                <img src={image} alt="" class="object-cover w-full h-full opacity-80" />
                <div class="absolute inset-0 bg-black/30" />
            </div>
        )
    }

    <div class="container mx-auto px-4 relative z-10 animate-content">
        <h1 class="text-5xl md:text-6xl font-bold text-white fade-element">
            {title}
        </h1>
        {subtitle && <p class="text-xl md:text-2xl mt-4 text-white/90 fade-element delay">{subtitle}</p>}
    </div>
</section>

<style>
    .fade-element {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.8s ease-out;
    }

    .delay {
        transition-delay: 0.3s;
    }

    .animate-content.visible .fade-element {
        opacity: 1;
        transform: translateY(0);
    }
</style>

<script>
    const observer = new IntersectionObserver(
        (entries) => {
            entries.forEach((entry) => {
                entry.target.classList.toggle('visible', entry.isIntersecting);
            });
        },
        { threshold: 0.1 }
    );

    document.querySelectorAll('.animate-content').forEach((el) => observer.observe(el));
</script>
